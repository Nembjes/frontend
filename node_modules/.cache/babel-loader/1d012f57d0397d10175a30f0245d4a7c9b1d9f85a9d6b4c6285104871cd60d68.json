{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\components\\\\WishlistContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Файл WishlistContext.jsx\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WishlistContext = /*#__PURE__*/createContext();\nexport const WishlistProvider = ({\n  children\n}) => {\n  _s();\n  const [wishlistItems, setWishlistItems] = useState([]);\n  const addToWishlist = async (itemId, quantity = 1) => {\n    try {\n      const existingItem = wishlistItems.find(item => item.id === itemId);\n      if (existingItem) {\n        // Если продукт уже есть в списке желаемого, увеличиваем количество\n        setWishlistItems(prevItems => prevItems.map(item => item.id === itemId ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item));\n      } else {\n        // Иначе добавляем новый продукт в список желаемого\n        const response = await axios.get(`http://localhost:5000/products/${itemId}`);\n        const newItem = {\n          ...response.data,\n          quantity\n        };\n        setWishlistItems(prevItems => [...prevItems, newItem]);\n      }\n    } catch (error) {\n      console.error('Error fetching product:', error);\n    }\n  };\n  const removeFromWishlist = itemId => {\n    setWishlistItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n  return /*#__PURE__*/_jsxDEV(WishlistContext.Provider, {\n    value: {\n      wishlistItems,\n      addToWishlist,\n      removeFromWishlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WishlistProvider, \"wiWBVeNZf+ovcg7sI9Ym+R4EH3g=\");\n_c = WishlistProvider;\nexport const useWishlist = () => {\n  _s2();\n  const context = useContext(WishlistContext);\n  if (!context) {\n    throw new Error('useWishlist must be used within a WishlistProvider');\n  }\n  return context;\n};\n_s2(useWishlist, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WishlistProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","WishlistContext","WishlistProvider","children","_s","wishlistItems","setWishlistItems","addToWishlist","itemId","quantity","existingItem","find","item","id","prevItems","map","response","get","newItem","data","error","console","removeFromWishlist","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWishlist","_s2","context","Error","$RefreshReg$"],"sources":["D:/project/frontend/src/components/WishlistContext.jsx"],"sourcesContent":["// Файл WishlistContext.jsx\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WishlistContext = createContext();\r\n\r\nexport const WishlistProvider = ({ children }) => {\r\n  const [wishlistItems, setWishlistItems] = useState([]);\r\n\r\n  const addToWishlist = async (itemId, quantity = 1) => {\r\n    try {\r\n      const existingItem = wishlistItems.find((item) => item.id === itemId);\r\n\r\n      if (existingItem) {\r\n        // Если продукт уже есть в списке желаемого, увеличиваем количество\r\n        setWishlistItems((prevItems) =>\r\n          prevItems.map((item) =>\r\n            item.id === itemId ? { ...item, quantity: item.quantity + quantity } : item\r\n          )\r\n        );\r\n      } else {\r\n        // Иначе добавляем новый продукт в список желаемого\r\n        const response = await axios.get(`http://localhost:5000/products/${itemId}`);\r\n        const newItem = { ...response.data, quantity };\r\n        setWishlistItems((prevItems) => [...prevItems, newItem]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching product:', error);\r\n    }\r\n  };\r\n\r\n  const removeFromWishlist = (itemId) => {\r\n    setWishlistItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\r\n  };\r\n\r\n  return (\r\n    <WishlistContext.Provider value={{ wishlistItems, addToWishlist, removeFromWishlist }}>\r\n      {children}\r\n    </WishlistContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWishlist = () => {\r\n  const context = useContext(WishlistContext);\r\n  if (!context) {\r\n    throw new Error('useWishlist must be used within a WishlistProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,GAAG,CAAC,KAAK;IACpD,IAAI;MACF,MAAMC,YAAY,GAAGL,aAAa,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC;MAErE,IAAIE,YAAY,EAAE;QAChB;QACAJ,gBAAgB,CAAEQ,SAAS,IACzBA,SAAS,CAACC,GAAG,CAAEH,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAG;UAAE,GAAGI,IAAI;UAAEH,QAAQ,EAAEG,IAAI,CAACH,QAAQ,GAAGA;QAAS,CAAC,GAAGG,IACzE,CACF,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMI,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,kCAAiCT,MAAO,EAAC,CAAC;QAC5E,MAAMU,OAAO,GAAG;UAAE,GAAGF,QAAQ,CAACG,IAAI;UAAEV;QAAS,CAAC;QAC9CH,gBAAgB,CAAEQ,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEI,OAAO,CAAC,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAId,MAAM,IAAK;IACrCF,gBAAgB,CAAEQ,SAAS,IAAKA,SAAS,CAACS,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC,CAAC;EACjF,CAAC;EAED,oBACER,OAAA,CAACC,eAAe,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,aAAa;MAAEE,aAAa;MAAEe;IAAmB,CAAE;IAAAnB,QAAA,EACnFA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACzB,EAAA,CAlCWF,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAoC7B,OAAO,MAAM6B,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGrC,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}