{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\actions\\\\AddBrand.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBrand = () => {\n  _s();\n  const [brandName, setBrandName] = useState('');\n  const [userRole, setUserRole] = useState('');\n  useEffect(() => {\n    // Получите данные о пользователе, включая роль, с вашего сервера.\n    // Замените 'http://localhost:5000/users/me' на ваш реальный эндпоинт.\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/users/me', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        setUserRole(data.role); // Предполагается, что роль приходит в ответе с сервера.\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleBrandNameChange = e => {\n    setBrandName(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Здесь вы можете использовать ваш API для отправки данных на сервер\n    fetch('http://localhost:5000/brand', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: brandName\n      })\n    }).then(response => response.json()).then(data => {\n      // После успешного добавления бренда перенаправляем на страницу списка брендов\n      window.location.href = '/admin/brands';\n    }).catch(error => console.error('Error adding brand:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0431\\u0440\\u0435\\u043D\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"brandName\",\n          className: \"form-label\",\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0431\\u0440\\u0435\\u043D\\u0434\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"brandName\",\n          value: brandName,\n          onChange: handleBrandNameChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0431\\u0440\\u0435\\u043D\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBrand, \"DXiUaNHu2Ydg9lEDJpOdAPJjthQ=\");\n_c = AddBrand;\nexport default AddBrand;\nvar _c;\n$RefreshReg$(_c, \"AddBrand\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AddBrand","_s","brandName","setBrandName","userRole","setUserRole","fetchUserData","response","fetch","headers","Authorization","localStorage","getItem","data","json","role","error","console","handleBrandNameChange","e","target","value","handleSubmit","preventDefault","method","body","JSON","stringify","name","then","window","location","href","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["D:/project/frontend/src/actions/AddBrand.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AddBrand = () => {\r\n  const [brandName, setBrandName] = useState('');\r\n  const [userRole, setUserRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Получите данные о пользователе, включая роль, с вашего сервера.\r\n    // Замените 'http://localhost:5000/users/me' на ваш реальный эндпоинт.\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/users/me', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        setUserRole(data.role); // Предполагается, что роль приходит в ответе с сервера.\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleBrandNameChange = (e) => {\r\n    setBrandName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Здесь вы можете использовать ваш API для отправки данных на сервер\r\n    fetch('http://localhost:5000/brand', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: brandName }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // После успешного добавления бренда перенаправляем на страницу списка брендов\r\n        window.location.href = '/admin/brands';\r\n      })\r\n      .catch((error) => console.error('Error adding brand:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Добавить новый бренд</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"brandName\" className=\"form-label\">\r\n            Название бренда\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"brandName\"\r\n            value={brandName}\r\n            onChange={handleBrandNameChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Добавить бренд\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBrand;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}