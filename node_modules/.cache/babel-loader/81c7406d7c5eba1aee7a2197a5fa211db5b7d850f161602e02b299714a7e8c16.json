{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// Profile.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Здесь вы можете использовать свой URL для получения данных о пользователе\n        const response = await axios.get('http://localhost:5000/users/me', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Предполагается, что у вас есть токен после входа в систему\n          }\n        });\n        setUserData(response.data);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [userData.username, \"'s Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Registration Date: \", new Date(userData.date_reg).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), userData && userData.orders && userData.orders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-4\",\n        children: \"User Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: userData.orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Order \", order.orderNum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), \" - \", order.status.name, \" - Total: $\", order.total]\n        }, order.orderNum, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"Q/bN2hINckB+VINYSZfns3MkAk8=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","fetchUserData","response","get","headers","Authorization","localStorage","getItem","data","error","console","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","email","Date","date_reg","toLocaleDateString","orders","length","map","order","orderNum","status","name","total","_c","$RefreshReg$"],"sources":["D:/project/frontend/src/pages/Profile.jsx"],"sourcesContent":["// Profile.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        // Здесь вы можете использовать свой URL для получения данных о пользователе\r\n        const response = await axios.get('http://localhost:5000/users/me', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`, // Предполагается, что у вас есть токен после входа в систему\r\n          },\r\n        });\r\n        \r\n        setUserData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {/* Информация о пользователе */}\r\n      {userData && (\r\n        <div>\r\n          <h2>{userData.username}'s Profile</h2>\r\n          <p>Email: {userData.email}</p>\r\n          <p>Registration Date: {new Date(userData.date_reg).toLocaleDateString()}</p>\r\n          {/* Дополнительные данные о пользователе, которые у вас есть в базе данных */}\r\n        </div>\r\n      )}\r\n\r\n      {/* Отображение заказов пользователя (пример) */}\r\n      {userData && userData.orders && userData.orders.length > 0 && (\r\n        <div>\r\n          <h3 className=\"mt-4\">User Orders</h3>\r\n          <ul className=\"list-group\">\r\n            {userData.orders.map((order) => (\r\n              <li key={order.orderNum} className=\"list-group-item\">\r\n                <strong>Order {order.orderNum}</strong> - {order.status.name} - Total: ${order.total}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}