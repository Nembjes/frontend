{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\actions\\\\EditBrand.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditBrand = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [brandName, setBrandName] = useState('');\n  useEffect(() => {\n    // Здесь вы можете использовать ваш API для получения данных о выбранном бренде\n    fetch(`http://localhost:5000/brands/${id}`).then(response => response.json()).then(data => {\n      setBrandName(data.name);\n    }).catch(error => console.error('Error fetching brand:', error));\n  }, [id]);\n  const handleInputChange = e => {\n    setBrandName(e.target.value);\n  };\n  const handleUpdateBrand = () => {\n    // Здесь вы можете использовать ваш API для обновления данных о бренде\n    fetch(`http://localhost:5000/brands/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: brandName\n      })\n    }).then(() => {\n      // После успешного обновления перенаправьте пользователя на страницу списка брендов\n      history.push('/admin/brands');\n    }).catch(error => console.error('Error updating brand:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0431\\u0440\\u0435\\u043D\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"brandName\",\n        className: \"form-label\",\n        children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0431\\u0440\\u0435\\u043D\\u0434\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"brandName\",\n        value: brandName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpdateBrand,\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EditBrand, \"q3DLJz3o1zIAd1HVcfQ9WZgLzLM=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditBrand;\nexport default EditBrand;\nvar _c;\n$RefreshReg$(_c, \"EditBrand\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","jsxDEV","_jsxDEV","EditBrand","_s","id","history","brandName","setBrandName","fetch","then","response","json","data","name","catch","error","console","handleInputChange","e","target","value","handleUpdateBrand","method","headers","body","JSON","stringify","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/project/frontend/src/actions/EditBrand.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst EditBrand = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [brandName, setBrandName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Здесь вы можете использовать ваш API для получения данных о выбранном бренде\r\n    fetch(`http://localhost:5000/brands/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setBrandName(data.name);\r\n      })\r\n      .catch((error) => console.error('Error fetching brand:', error));\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setBrandName(e.target.value);\r\n  };\r\n\r\n  const handleUpdateBrand = () => {\r\n    // Здесь вы можете использовать ваш API для обновления данных о бренде\r\n    fetch(`http://localhost:5000/brands/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: brandName }),\r\n    })\r\n      .then(() => {\r\n        // После успешного обновления перенаправьте пользователя на страницу списка брендов\r\n        history.push('/admin/brands');\r\n      })\r\n      .catch((error) => console.error('Error updating brand:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Редактировать бренд</h2>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"brandName\" className=\"form-label\">\r\n          Название бренда\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"brandName\"\r\n          value={brandName}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpdateBrand}>\r\n        Сохранить изменения\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBrand;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}